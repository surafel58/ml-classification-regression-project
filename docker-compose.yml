services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"    # External access port for Kafka
      - "9093:9093"    # Internal access port for Kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,INTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://ec2-13-51-6-139.eu-north-1.compute.amazonaws.com:9092,INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms128M"
    healthcheck:
      test: nc -z localhost 9092 || exit 1
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure:3

  consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure:3